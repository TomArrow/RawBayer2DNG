<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RawBayer2DNG">
    
    <!-- Magnifier color balance sliders -->
    <ToolTip x:Key="Tooltip_Magnifier_Sliders" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="500">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">RGB Balance sliders</TextBlock>
                    <TextBlock FontStyle="Italic">Lossless raw color balance</TextBlock>
                    <TextBlock FontWeight="Bold">Does not affect raw data, which remains lossless</TextBlock>
                    <TextBlock FontWeight="Bold">Does not affect channel separation</TextBlock>
                    <TextBlock FontWeight="Bold">Does affect metadata in the DNG output</TextBlock>
                </StackPanel>
            </WrapPanel>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                These sliders affect the AsShotNeutral and ColorMatrix1 TIFF tags. In effect, they are equivalent to applying digital gains during the creation of the .Raw (or other source) data. As long as you open the dng into a linear sRGB space (as you always should with data from this tool), you will retain the raw RGB data from the sensor even when using these sliders. It will merely be scaled/multiplied by the factors set with these sliders.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>The benefit of using these sliders as opposed to digital gain during capturing of the raw data is that you retain the 100% lossless sensor data, suffer no potential rounding errors and retain the full dynamic range of each color channel.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>Channel seperation is maintained when converting the DNG to sRGB.
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    <!-- sRGB gamma preview setting explanation -->
    <ToolTip x:Key="Tooltip_Preview_sRGBGamma" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="500">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">sRGB gamma preview</TextBlock>
                    <TextBlock FontStyle="Italic">Preview option</TextBlock>
                    <TextBlock FontWeight="Bold">Shows the raw image correctly inside this tool's preview</TextBlock>
                    <TextBlock FontWeight="Bold">Does not affect the produced output</TextBlock>
                </StackPanel>
            </WrapPanel>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                Properly recorded raw data from a sensor comes in linear form. Typically we're talking about linear light in 12 bits of precision.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>Unfortunately the connection between your computer and display can (with exceptions) only carry 8 bits of precision. Thus computer displays typically expect the data to be delivered to it in so-called "sRGB gamma", which applies a curve to the data boosting dark parts, which the display reverses again.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>With this switch on, that's all that happens. If you turn it off, the preview image will be produced in linear light, which is technically more accurate to the source data, but will look wrong (too dark and contrasty) on pretty much every computer display.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>Disabling this setting will give you a similar image to what you get in some industrial camera capturing software when gamma is not set. This does not mean that there is anything wrong with the image, merely that the preview is not correctly implemented to apply sRGB gamma.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>If the .raw sequence you are editing was captured with gamma already applied, disabling this might give you a better looking preview, but keep in mind that it will still look too bright in any raw developer you use unless you reverse the gamma. Raw developers expect linear data, hence capturing without gamma is highly recommended. Capturing with gamma also breaks the HDR functionality.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>As a preview setting, this does not affect the output in any way. It is merely there to give you an accurate preview.
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    <!-- DeBayer preview setting explanation -->
    <ToolTip x:Key="Tooltip_Preview_Debayer" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="500">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">Debayer preview</TextBlock>
                    <TextBlock FontStyle="Italic">Preview option</TextBlock>
                    <TextBlock FontWeight="Bold">Does not affect the produced output</TextBlock>
                </StackPanel>
            </WrapPanel>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                Bayer images do not technically have separate red, green and blue channels. It is one big greyscale image and the so-called "Bayer pattern" on the sensor of the camera defines which pixel senses which color. 
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>The Bayer pattern typically consists of a pattern of 4 pixels that repeats itself across the entire image. This pattern typically has two green pixels, one red pixel, and one blue pixel. The thing that changes from camera to camera is the exact arrangement of the pixels. Cropping an image by amounts not divisible by 2 also changes the effective bayer pattern.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>To create color from this greyscale image, a debayering algorithm is needed. Ideally, it keeps the image in the full resolution of the greyscale image and uses interpolation to find a good compromise between a sharp image and correct colors.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>Proper debayering can be a bit complex and there is no real need to have a perfect preview in this tool, so this setting will simply give you the combined RGB values from each bayer group of 4 pixels without doing any interpolation. This results in a low resolution output image, but the preview in this tool is subsampled and low res anyway, so it does the job of previewing the colors.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>This setting is only a preview setting, it does not affect the output in any way, which is always linear data losslessly copied from the source (except for HDR processing, which by its nature cannot be entirely lossless)
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    
    <!-- HDR Sequence explanation -->
    <ToolTip x:Key="Tooltip_HDR_Sequence" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="500">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">HDR sequence settings</TextBlock>
                    <TextBlock FontStyle="Italic">Input processing option</TextBlock>
                    <TextBlock FontWeight="Bold">Set your exposure settings here</TextBlock>
                </StackPanel>
            </WrapPanel>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                Here you can set up a sequence of up to 6 exposures that repeats itself. Empty fields are ignored. By default the first field is filled with a single "E". In this configuration, no HDR processing is applied, and a single exposure per frame is assumed.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>
                The HDR processing deals with relative exposure times, not with absolute exposure times. A simple "E" represents a "base exposure" that other entries are relative to. This base exposure is not required to be the first one in the sequence.
                <LineBreak></LineBreak> 
                <LineBreak></LineBreak>Use E+2 to indicate a shot that is 2 stops overexposed. Use E*4 to indicate a shot that is overexposed with an exposure time multiplier of 4 (equivalent of 2 stops). These are two alternate ways you can define the same thing."
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>The darkest exposure defines the actual brightness of the output image. The other exposures are linearly reduced (through division/multiplication) to the same brightness as the darkest exposure and their clipped values are masked out.
                <LineBreak></LineBreak>Due to this algorithm it is particularly important for the input images to be linear and to have no gamma applied, otherwise the HDR merging will be compromised and produce artifacts. 
                <LineBreak></LineBreak>In the same vein, if the provided exposure information is not accurate, ugly artifacts will be the result. For example, if your second exposure is 12 times brighter than the first, but you enter E*16, the outcome will look terrible.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>Use X or leave empty to indicate that that shot doesn't exist (if you only do single exposure for example).
                <LineBreak></LineBreak>Use the delay option to skip "useless images" at the start of your sequence that mess up your order.
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    <!-- HDR delay explanation -->
    <ToolTip x:Key="Tooltip_HDR_Delay" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="400">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">HDR processing delay</TextBlock>
                    <TextBlock FontStyle="Italic">Input processing option</TextBlock>
                    <TextBlock FontWeight="Bold">Discard X pictures before the first full HDR sequence begins</TextBlock>
                </StackPanel>
            </WrapPanel>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                It might not always be easy to start recording your sequences at exactly the right time so that the first image is also the first image in your first HDR sequence.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>Thus, if your sequence doesn't properly align for HDR processing, simply discard as many pictures as you need from the start of the sequence to fix the alignment of the HDR processing.
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    <!-- HDR clipping point explanation -->
    <ToolTip x:Key="Tooltip_HDR_ClippingPoint" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="400">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">HDR processing clipping point</TextBlock>
                    <TextBlock FontStyle="Italic">Input processing option</TextBlock>
                    <TextBlock FontWeight="Bold">Clipping point of the overexposed exposures</TextBlock>
                </StackPanel>
            </WrapPanel>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                When merging for HDR, the darkest exposure is taken as reference for the output image brightness. The other exposures are linearly reduced to the brightness of the darkest exposure, and all clipped pixels are masked out and taken from the dark exposure.
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>
                The clipping point is the threshold at which the pixel is taken from the darker exposure instead of the brighter one. This is necessary to set possibly due to weirdness of ADCs - it seems a clipped pixel isn't always EXACTLY perfect white, only almost. Even an obviously clipped pixel can produce values far from the maximum digital value.
                
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>I have observed these values to easily dip to, for example, 80% of the maximum digital value. If the value for the clipping point is set too high, some clipped pixels will not be recognized as clipped and produce ugly dark pixels in the output. These "dark clipped" pixels also tend to stay in the same positions on the same sensor, indicating that it might be an imperfection in the sensor itself. 
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    <!-- HDR feather stops explanation -->
    <ToolTip x:Key="Tooltip_HDR_FeatherStops" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="400">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">HDR processing feather stops</TextBlock>
                    <TextBlock FontStyle="Italic">Input processing option</TextBlock>
                    <TextBlock FontWeight="Bold">Smoothing of transition between exposures</TextBlock>
                </StackPanel>
            </WrapPanel>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                How many stops (from the clipping point downwards) should be averaged between the brighter and darker exposure? 
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>Potentially reduces artifacts (play around and see), but can result in bigger files due to increased precision. Can be left at zero to deactivate feathering.
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    
    <!-- DNG output 12 bit packed -->
    <ToolTip x:Key="Tooltip_DNGOutput_12bitpacked" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="400">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">12 bit packed</TextBlock>
                    <TextBlock FontStyle="Italic">Output data format</TextBlock>
                    <TextBlock FontWeight="Bold">Recommended for non-HDR conversion</TextBlock>
                </StackPanel>
            </WrapPanel>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                <Bold>Pro: </Bold> Compresses well in Adobe DNG converter
                <LineBreak></LineBreak><Bold>Pro: </Bold> Lossless in non-HDR mode
                <LineBreak></LineBreak><Bold>Pro: </Bold> Smallest format in uncompressed mode
                
                <LineBreak></LineBreak><Bold>Contra: </Bold> In HDR mode, least significant 4 bits are truncated
                <LineBreak></LineBreak><Bold>Contra: </Bold> Incompatible with compression in this tool (works with Adobe DNG Converter though)
            </TextBlock>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                12 bit format to reduce the size of the output file. 
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>
                The bit layout of this format is as follows: 
                <LineBreak></LineBreak>
                <Span FontFamily="Courier New">
                a01 a02 a03 a04   a05 a06 a07 a08 
                <LineBreak></LineBreak>
                a09 a10 a11 a12   b01 b02 b03 b04
                <LineBreak></LineBreak>
                b05 b06 b07 b08   b09 b10 b11 b12</Span>
                <LineBreak></LineBreak>
                (with 01 representing the most significant bit and 12 the least significant bit)
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>
                If you are not using HDR processing and your original image is only 12 bits, this is a completely lossless way to save space. Sadly it is not compatible with the compression used in this program. For the best compression you should be running the files through Adobe DNG Converter anyway
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    <!-- DNG output 12 bit dark capsuled in 16 bit  -->
    <ToolTip x:Key="Tooltip_DNGOutput_12bitin16bitdarkcapsuled" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="400">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">12 bit dark-capsuled in 16 bit</TextBlock>
                    <TextBlock FontStyle="Italic">Output data format</TextBlock>
                    <TextBlock FontWeight="Bold">Not recommended</TextBlock>
                </StackPanel>
            </WrapPanel>

            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                <Bold>Pro: </Bold> Compresses well in Adobe DNG converter
                <LineBreak></LineBreak><Bold>Pro: </Bold> Lossless in non-HDR mode
                <LineBreak></LineBreak><Bold>Pro: </Bold> Can use compression in this tool, more efficiently than bright capsuled
                
                <LineBreak></LineBreak><Bold>Contra: </Bold> In HDR mode, least significant 4 bits are truncated
                <LineBreak></LineBreak><Bold>Contra: </Bold> In uncompressed form bigger output than 12 bit packed
            </TextBlock>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                The 12 bits of actual data get wrapped in a 16 bit data format. 
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>
                The bit layout of this format is as follows: 
                <LineBreak></LineBreak>
                <Span FontFamily="Courier New">
                00  00  00  00    a01 a02 a03 a04   
                <LineBreak></LineBreak>
                a05 a06 a07 a08   a09 a10 a11 a12
                <LineBreak></LineBreak>
                00  00  00  00    b01 b02 b03 b04   
                <LineBreak></LineBreak>
                b05 b06 b07 b08   b09 b10 b11 b12</Span>
                <LineBreak></LineBreak>
                (with 01 representing the most significant bit and 12 the least significant bit)
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>
                The 12 bits take up the least significant bits of the full 16 bit value, thus the image would normally be 4 stops too dark, however this mode automatically adds a BaselineExposure Tiff tag with the value 4 to the DNG. As a result, you won't see any difference. 
                
                <LineBreak></LineBreak>
                Like the other modes, this is completely lossless unless you are doing HDR processing, in which case the least significant 4 bits of the HDR output will be truncated.
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    <!-- DNG output 12 bit bright capsuled in 16 bit  -->
    <ToolTip x:Key="Tooltip_DNGOutput_12bitin16bitbrightcapsuled" ToolTipService.ShowDuration="2000000000">
        <StackPanel MaxWidth="400">
            <WrapPanel>
                <Image Source="images/Question_16x.png" Margin="0,0,5,0" Stretch="None" />
                <StackPanel>
                    <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,0">12 bit bright-capsuled in 16 bit / full 16 bit for HDR</TextBlock>
                    <TextBlock FontStyle="Italic">Output data format</TextBlock>
                    <TextBlock FontWeight="Bold">Recommended for HDR</TextBlock>
                </StackPanel>
            </WrapPanel>

            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                <Bold>Pro: </Bold> Preserves full 16 bit quality in HDR mode <Italic>(Note: HDR mode is limited to 16 bit, so any detail above 16 bit will be lost in any mode)</Italic>
                <LineBreak></LineBreak><Bold>Pro: </Bold> Lossless like the other modes
                <LineBreak></LineBreak><Bold>Pro: </Bold> Can use compression in this tool (but less efficiently than dark-capsuled)
                
                <LineBreak></LineBreak><Bold>Contra: </Bold> Bigger than 12 bit packed
                <LineBreak></LineBreak><Bold>Contra: </Bold> Compresses badly in Adobe DNG Converter. Expect an estimated 20-30% extra filesize after compression in Adobe DNG Converter.
                <LineBreak></LineBreak><Bold>Contra: </Bold> Compresses badly with in-tool compression. Expect an estimated 20-30% extra filesize
            </TextBlock>
            <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,8" />
            <TextBlock TextWrapping="Wrap">
                The 12 bits of actual data get wrapped in a 16 bit data format. 
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>
                The bit layout of this format is as follows: 
                <LineBreak></LineBreak>
                <Span FontFamily="Courier New">
                a01 a02 a03 a04   a05 a06 a07 a08 
                <LineBreak></LineBreak>
                a09 a10 a11 a12   00  00  00  00    
                <LineBreak></LineBreak>
                b01 b02 b03 b04   b05 b06 b07 b08
                <LineBreak></LineBreak>
                b09 b10 b11 b12   00  00  00  00  </Span>
                <LineBreak></LineBreak>
                (with 01 representing the most significant bit and 12 the least significant bit)
                <LineBreak></LineBreak>
                <LineBreak></LineBreak>
                The 12 bits take up the most  significant bits of the full 16 bit value, thus the bottom 4 bits are filled with zeros.
                
                <LineBreak></LineBreak>
                Like the other modes, this is completely lossless in non HDR mode. It is also lossless in HDR mode, however the HDR mode itself is limited to 16 bits of precision and the HDR merging is inherently not a totally lossless process, as some information from each of the exposures is discarded and replaced with information from another exposure. When using feathering, some blending of pixels also happens.
            </TextBlock>
        </StackPanel>
    </ToolTip>
    
    
</ResourceDictionary>